// Breakpoints
$breakpoints: (
  "smallest-i": 400px,
  "small": 480px,
  "small-i": 500px,
  "small-1": 550px,
  "small-1i": 615px,
  "small-2": 650px,
  "small-2i": 780px,
  "small-3": 815px,
  "medium": 1070px,
  "medium-1": 1200px 

  // NOTE: Assign any new sizes to body:before as below
);
// Apply breakpoints to body:before for js
body:before {
  display: none;
  visibility: hidden;
  content: "pre-small"; /* From width: 0 up to first breakpoint */
}
@media only screen and (min-width: map_get($breakpoints, 'smallest-i')) {
  body:before {
    content: "smallest-i";
  }
}
@media only screen and (min-width: map_get($breakpoints, 'small')) {
  body:before {
    content: "small";
  }
}
@media only screen and (min-width: map_get($breakpoints, 'small-i')) {
  body:before {
    content: "small-i";
  }
}
@media only screen and (min-width: map_get($breakpoints, 'small-1')) {
  body:before {
    content: "small-1";
  }
}
@media only screen and (min-width: map_get($breakpoints, 'small-1i')) {
  body:before {
    content: "small-1i";
  }
}
@media only screen and (min-width: map_get($breakpoints, 'small-2')) {
  body:before {
    content: "small-2";
  }
}
@media only screen and (min-width: map_get($breakpoints, 'small-2i')) {
  body:before {
    content: "small-2i";
  }
}
@media only screen and (min-width: map_get($breakpoints, 'small-3')) {
  body:before {
    content: "small-3";
  }
}
@media only screen and (min-width: map_get($breakpoints, 'medium')) {
  body:before {
    content: "medium";
  }
}
@media only screen and (min-width: map_get($breakpoints, 'medium-1')) {
  body:before {
    content: "medium-1";
  }
}

$zindecies: ();

// Colours
$colour-black: #000;
$colour-teal: #0ff;
$colour-blue: #283583;

$colour-pb-neutral-light: #bfb3ae;
$colour-pb-neutral: #958b87;
$colour-pb-neutral-dark: #645550;




// $colour-pb-purple: #6e5f77;
$colour-pb-purple: #676568;

// $colour-pb-purple-dark: #52415c;
$colour-pb-purple-dark: #4b484d;

// $colour-pb-purple-mid: #a89fad;
$colour-pb-purple-mid: #e6e6e6;


// $colour-pb-purple-light: #ccc7d0;
$colour-pb-purple-light: #eee8f2;


$colour-pb-green: #b2cf96;
$colour-pb-blue: #98c5d0;
$colour-pb-blue-dark: #789da6;
$colour-pb-blue-mid: #cbe2e7;
$colour-pb-blue-light: #dbebef;
$colour-pb-peach: #f5a488;
$colour-pb-highlight: #f00;

// $colour-transition_duration: 2s;
// $menu_slide_duration: 1s;
$field-transition-duration: .25s;
$menu-transition_duration: .5s;
$menu-transition_duration_medium: 1s;
$menu-transition_duration_slow: 1.5s;
$rotate-transition_duration: .25s;

// Default Fonts
$font-title: 'Helvetica Neue', Helvetica, Arial, sans-serif;
$font-text: 'Helvetica Neue', Helvetica, Arial, sans-serif;
$font-secondary: 'Helvetica Neue', Helvetica, Arial, sans-serif;

// Base sizes in pixels
// $base__font-size: 15.999 !default;
// $base__line: 18 !default;

$letter-spacing-menu: 0.15rem;
$letter-spacing-title: 0.01rem;

// Leading as proportion of font size
$leading-title: 1.25;

%fadein {
  @keyframes fadein {
    0%   {opacity: 0}
    100% {opacity: 1}
  }
  animation: fadein $menu-transition_duration;
}

/* For lazy loading */
%lazy-fade {
  opacity: 0;
  &:not(.initial) {
    transition: opacity 1s;
  }
  &.initial,
  &.loaded,
  &.error {
    opacity: 1;
  }
  &:not([src]) {
    visibility: hidden;
  }
}

%margin-padding-free {
  margin: 0;
  padding: 0;
}

%full-height-no-scroll {
  height: 100vh;
  overflow: hidden;
}

// Font-sizes - currently unused
%size-text {
  font-size: 1.3rem;
  line-height: 1.9rem;

  @media (min-width: map_get($breakpoints, 'medium')) {
    font-size: 1.7rem;
    line-height: 2.1rem;
  }
}
%text-subhead {
  text-align: left;
  margin: 4rem 0 2rem 0;
}
%text-image {
  margin-bottom: 2rem;
}
%product-title {
  font-size: 1.3rem;
  font-weight: normal;
  letter-spacing: 0;
  line-height: 1.7rem;
  margin-bottom: 2rem;
  text-align: left;
  text-transform: none;
}
%footer-base-text {
  color: $colour-pb-purple-light;
}
%full-screen-bordered {
  @media only screen and (max-width: map_get($breakpoints, 'medium') - 1) {
    background-color: $colour-pb-blue;
    border: 20px solid white;
    height: 100%;
    position: absolute;
    top: 0;
    left:0;
    width: 100%;
    @include prefix((
      box-sizing: border-box
    ), webkit moz);
  }
}
%menu-element-full-screen {
  @extend %full-screen-bordered;
  font-family: $font-secondary;
  font-size: 1.5rem;
  line-height: 160%;
  list-style: none;
  text-align: center;
}
%menu-button-cross-bar-1 {
  @include transform(rotate(-45deg) translate(-6.425px, 6px));
}
%menu-button-cross-bar-3 {
  @include transform(rotate(45deg) translate(-6px, -7px));
}
%hidden {
  transform: scale(0);
  visibility: hidden;
  pointer-events: none;
  height: 0;
}
%unhidden {
  transform: scale(1);
  visibility: visible;
  pointer-events: auto;
  height: auto;
}
%message {
  background-color: $colour-pb-purple-dark;
  color: #fff;
  font-size: 1.1rem;
  line-height: 1rem;
  margin-bottom: 0.75rem;
  opacity: 1; 
  padding: 1rem;
  scale: 1;
  visibility: visible; 
}
%message-hidden {
  line-height: 0;
  margin-bottom: 0;
  opacity: 0; 
  padding: 0 0.5rem;
  scale: 0;
  visibility: hidden; 
  width: 100%;
  @include transition(line-height $field-transition-duration ease, padding $field-transition-duration ease);
}


%stories {
  @media only screen and (min-width: map_get($breakpoints, 'small-2')) {
    column-count: 2;
    column-gap: 2rem;
    margin: -0.55rem 2% 0 2%;
    orphans: 1;
    widows: 1;
  }
}

%story {
  @extend %fadein;
  border: 1px solid #98c5d0;
  box-sizing: border-box;
  break-inside: avoid;
  display: inline-block;
  margin-bottom: 2rem;
  padding: 2rem;

  h2 {
    margin-top: 0;
  }

  h3 {
    color: $colour-pb-purple;
    font-size: 1.3rem;
    font-weight: bold;
    letter-spacing: $letter-spacing-title;
    line-height: 1.6rem;
    margin-bottom: 2rem;
    margin-top: -1.5rem;
    text-align: left;
    text-transform: lowercase;
  }

  p:last-child {
    margin-bottom: 0;
  }

  .story__details{
    break-inside: avoid;
    color: $colour-pb-purple;
    font-size: 1.1rem;
    font-weight: bold;
    line-height: calc-line-height(1.25) * 1rem;

    p {
      margin-bottom: 0;
    }
  }
  @media only screen and (min-width: map_get($breakpoints, 'small-i')) {
    padding: 4rem;
  }
  @media only screen and (min-width: map_get($breakpoints, 'small-1i')) {
    padding: 6rem;
  }
  @media only screen and (min-width: map_get($breakpoints, 'small-2')) {
    padding: 2rem;
  }
  @media only screen and (min-width: map_get($breakpoints, 'medium')) {
    padding: 4rem;
  }
}
%story__image {
  margin: -2rem -2rem 1rem -2rem;
  width: calc(100% + 4rem);

  @media only screen and (min-width: map_get($breakpoints, 'small-i')) {
    margin: -4rem -4rem 2rem -4rem;
    width: calc(100% + 8rem);
  }
  @media only screen and (min-width: map_get($breakpoints, 'small-1i')) {
    margin: -6rem -6rem 2rem -6rem;
    width: calc(100% + 12rem);
  }
  @media only screen and (min-width: map_get($breakpoints, 'small-2')) {
    margin: -2rem -2rem 1rem -2rem;
    width: calc(100% + 4rem);
  }
  @media only screen and (min-width: map_get($breakpoints, 'medium')) {
    margin: -4rem -4rem 2rem -4rem;
    width: calc(100% + 8rem);
  }
}
